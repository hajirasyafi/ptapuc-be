diff --git a/node_modules/@strapi/admin/admin/src/pages/AuthPage/components/Login/BaseLogin.js b/node_modules/@strapi/admin/admin/src/pages/AuthPage/components/Login/BaseLogin.js
index 811a1a9..ab40151 100644
--- a/node_modules/@strapi/admin/admin/src/pages/AuthPage/components/Login/BaseLogin.js
+++ b/node_modules/@strapi/admin/admin/src/pages/AuthPage/components/Login/BaseLogin.js
@@ -38,22 +38,6 @@ const Login = ({ onSubmit, schema, children }) => {
             <Form noValidate>
               <Column>
                 <Logo />
-                <Box paddingTop={6} paddingBottom={1}>
-                  <Typography variant="alpha" as="h1">
-                    {formatMessage({
-                      id: 'Auth.form.welcome.title',
-                      defaultMessage: 'Welcome!',
-                    })}
-                  </Typography>
-                </Box>
-                <Box paddingBottom={7}>
-                  <Typography variant="epsilon" textColor="neutral600">
-                    {formatMessage({
-                      id: 'Auth.form.welcome.subtitle',
-                      defaultMessage: 'Log in to your Strapi account',
-                    })}
-                  </Typography>
-                </Box>
                 {errors.errorMessage && (
                   <Typography
                     id="global-form-error"
@@ -81,7 +65,7 @@ const Login = ({ onSubmit, schema, children }) => {
                   label={formatMessage({ id: 'Auth.form.email.label', defaultMessage: 'Email' })}
                   placeholder={formatMessage({
                     id: 'Auth.form.email.placeholder',
-                    defaultMessage: 'kai@doe.com',
+                    defaultMessage: 'Masukkan email anda',
                   })}
                   name="email"
                   required
@@ -148,16 +132,6 @@ const Login = ({ onSubmit, schema, children }) => {
         </Formik>
         {children}
       </LayoutContent>
-      <Flex justifyContent="center">
-        <Box paddingTop={4}>
-          <Link to="/auth/forgot-password">
-            {formatMessage({
-              id: 'Auth.link.forgot-password',
-              defaultMessage: 'Forgot your password?',
-            })}
-          </Link>
-        </Box>
-      </Flex>
     </Main>
   );
 };
diff --git a/node_modules/@strapi/admin/admin/src/pages/HomePage/index.js b/node_modules/@strapi/admin/admin/src/pages/HomePage/index.js
index 72836a4..9197e33 100644
--- a/node_modules/@strapi/admin/admin/src/pages/HomePage/index.js
+++ b/node_modules/@strapi/admin/admin/src/pages/HomePage/index.js
@@ -3,21 +3,17 @@
  *
  */
 
-import React, { memo, useMemo } from 'react';
-import { FormattedMessage } from 'react-intl';
-import styled from 'styled-components';
-import { Helmet } from 'react-helmet';
-import { useHistory } from 'react-router-dom';
-import { LoadingIndicatorPage, useGuidedTour } from '@strapi/helper-plugin';
-import { Layout, Main, Box, Grid, GridItem } from '@strapi/design-system';
-import useLicenseLimitNotification from 'ee_else_ce/hooks/useLicenseLimitNotification';
-import cornerOrnamentPath from './assets/corner-ornament.svg';
-import { useModels } from '../../hooks';
-import isGuidedTourCompleted from '../../components/GuidedTour/utils/isGuidedTourCompleted';
-import GuidedTourHomepage from '../../components/GuidedTour/Homepage';
-import SocialLinks from './SocialLinks';
-import HomeHeader from './HomeHeader';
-import ContentBlocks from './ContentBlocks';
+import React, { memo, useMemo } from "react";
+import { FormattedMessage } from "react-intl";
+import styled from "styled-components";
+import { Helmet } from "react-helmet";
+import { useHistory } from "react-router-dom";
+import { LoadingIndicatorPage, useGuidedTour } from "@strapi/helper-plugin";
+import { Layout, Main, Box } from "@strapi/design-system";
+import useLicenseLimitNotification from "ee_else_ce/hooks/useLicenseLimitNotification";
+import cornerOrnamentPath from "./assets/corner-ornament.svg";
+import { useModels } from "../../hooks";
+import isGuidedTourCompleted from "../../components/GuidedTour/utils/isGuidedTourCompleted";
 
 const LogoContainer = styled(Box)`
   position: absolute;
@@ -31,25 +27,33 @@ const LogoContainer = styled(Box)`
 
 const HomePage = () => {
   // Temporary until we develop the menu API
-  const { collectionTypes, singleTypes, isLoading: isLoadingForModels } = useModels();
+  const {
+    collectionTypes,
+    singleTypes,
+    isLoading: isLoadingForModels,
+  } = useModels();
   const { guidedTourState, isGuidedTourVisible, isSkipped } = useGuidedTour();
   useLicenseLimitNotification();
 
   const showGuidedTour =
-    !isGuidedTourCompleted(guidedTourState) && isGuidedTourVisible && !isSkipped;
+    !isGuidedTourCompleted(guidedTourState) &&
+    isGuidedTourVisible &&
+    !isSkipped;
 
   const { push } = useHistory();
   const handleClick = (e) => {
     e.preventDefault();
 
-    push('/plugins/content-type-builder/content-types/create-content-type');
+    push("/plugins/content-type-builder/content-types/create-content-type");
   };
 
   const hasAlreadyCreatedContentTypes = useMemo(() => {
-    const filterContentTypes = (contentTypes) => contentTypes.filter((c) => c.isDisplayed);
+    const filterContentTypes = (contentTypes) =>
+      contentTypes.filter((c) => c.isDisplayed);
 
     return (
-      filterContentTypes(collectionTypes).length > 1 || filterContentTypes(singleTypes).length > 0
+      filterContentTypes(collectionTypes).length > 1 ||
+      filterContentTypes(singleTypes).length > 0
     );
   }, [collectionTypes, singleTypes]);
 
@@ -66,24 +70,7 @@ const HomePage = () => {
         <LogoContainer>
           <img alt="" aria-hidden src={cornerOrnamentPath} />
         </LogoContainer>
-        <Box padding={10}>
-          <Grid>
-            <GridItem col={8} s={12}>
-              <HomeHeader
-                onCreateCT={handleClick}
-                hasCreatedContentType={hasAlreadyCreatedContentTypes}
-              />
-            </GridItem>
-          </Grid>
-          <Grid gap={6}>
-            <GridItem col={8} s={12}>
-              {showGuidedTour ? <GuidedTourHomepage /> : <ContentBlocks />}
-            </GridItem>
-            <GridItem col={4} s={12}>
-              <SocialLinks />
-            </GridItem>
-          </Grid>
-        </Box>
+        <Box padding={10}></Box>
       </Main>
     </Layout>
   );
diff --git a/node_modules/@strapi/admin/admin/src/pages/SettingsPage/pages/ApplicationInfosPage/index.js b/node_modules/@strapi/admin/admin/src/pages/SettingsPage/pages/ApplicationInfosPage/index.js
index 922edbe..b0b4b08 100644
--- a/node_modules/@strapi/admin/admin/src/pages/SettingsPage/pages/ApplicationInfosPage/index.js
+++ b/node_modules/@strapi/admin/admin/src/pages/SettingsPage/pages/ApplicationInfosPage/index.js
@@ -1,216 +1,11 @@
-import React, { useRef } from 'react';
-import { useQuery, useMutation, useQueryClient } from 'react-query';
-import { useIntl } from 'react-intl';
-import {
-  useAppInfos,
-  SettingsPageTitle,
-  useFocusWhenNavigate,
-  useNotification,
-  useRBAC,
-  useTracking,
-} from '@strapi/helper-plugin';
-import {
-  Button,
-  ContentLayout,
-  Flex,
-  Grid,
-  GridItem,
-  HeaderLayout,
-  Layout,
-  Link,
-  Main,
-  Typography,
-} from '@strapi/design-system';
-import { ExternalLink, Check } from '@strapi/icons';
-import AdminSeatInfo from 'ee_else_ce/pages/SettingsPage/pages/ApplicationInfosPage/components/AdminSeatInfo';
-
-import adminPermissions from '../../../../permissions';
-import { useConfigurations } from '../../../../hooks';
-import CustomizationInfos from './components/CustomizationInfos';
-import { fetchProjectSettings, postProjectSettings } from './utils/api';
-import getFormData from './utils/getFormData';
+import React from "react";
+import { SettingsPageTitle } from "@strapi/helper-plugin";
+import { Layout } from "@strapi/design-system";
 
 const ApplicationInfosPage = () => {
-  const inputsRef = useRef();
-  const toggleNotification = useNotification();
-  const { trackUsage } = useTracking();
-  const { formatMessage } = useIntl();
-  const queryClient = useQueryClient();
-  useFocusWhenNavigate();
-  const appInfos = useAppInfos();
-  const { latestStrapiReleaseTag, shouldUpdateStrapi, strapiVersion } = appInfos;
-  const { updateProjectSettings } = useConfigurations();
-
-  const {
-    allowedActions: { canRead, canUpdate },
-  } = useRBAC(adminPermissions.settings['project-settings']);
-  const canSubmit = canRead && canUpdate;
-
-  const { data } = useQuery('project-settings', fetchProjectSettings, { enabled: canRead });
-
-  const submitMutation = useMutation((body) => postProjectSettings(body), {
-    async onSuccess({ menuLogo, authLogo }) {
-      await queryClient.invalidateQueries('project-settings', { refetchActive: true });
-      updateProjectSettings({ menuLogo: menuLogo?.url, authLogo: authLogo?.url });
-    },
-  });
-
-  const handleSubmit = (e) => {
-    e.preventDefault();
-
-    if (!canUpdate) return;
-
-    const inputValues = inputsRef.current.getValues();
-    const formData = getFormData(inputValues);
-
-    submitMutation.mutate(formData, {
-      onSuccess() {
-        const { menuLogo, authLogo } = inputValues;
-
-        if (menuLogo.rawFile) {
-          trackUsage('didChangeLogo', {
-            logo: 'menu',
-          });
-        }
-
-        if (authLogo.rawFile) {
-          trackUsage('didChangeLogo', {
-            logo: 'auth',
-          });
-        }
-
-        toggleNotification({
-          type: 'success',
-          message: formatMessage({ id: 'app', defaultMessage: 'Saved' }),
-        });
-      },
-      onError() {
-        toggleNotification({
-          type: 'warning',
-          message: { id: 'notification.error', defaultMessage: 'An error occurred' },
-        });
-      },
-    });
-  };
-
   return (
     <Layout>
       <SettingsPageTitle name="Application" />
-      <Main>
-        <form onSubmit={handleSubmit}>
-          <HeaderLayout
-            title={formatMessage({ id: 'Settings.application.title', defaultMessage: 'Overview' })}
-            subtitle={formatMessage({
-              id: 'Settings.application.description',
-              defaultMessage: 'Administration panel’s global information',
-            })}
-            primaryAction={
-              canSubmit && (
-                <Button type="submit" startIcon={<Check />}>
-                  {formatMessage({ id: 'global.save', defaultMessage: 'Save' })}
-                </Button>
-              )
-            }
-          />
-          <ContentLayout>
-            <Flex direction="column" alignItems="stretch" gap={6}>
-              <Flex
-                direction="column"
-                alignItems="stretch"
-                gap={4}
-                hasRadius
-                background="neutral0"
-                shadow="tableShadow"
-                paddingTop={6}
-                paddingBottom={6}
-                paddingRight={7}
-                paddingLeft={7}
-              >
-                <Typography variant="delta" as="h3">
-                  {formatMessage({
-                    id: 'global.details',
-                    defaultMessage: 'Details',
-                  })}
-                </Typography>
-
-                <Grid gap={5} as="dl">
-                  <GridItem col={6} s={12}>
-                    <Typography variant="sigma" textColor="neutral600" as="dt">
-                      {formatMessage({
-                        id: 'Settings.application.strapiVersion',
-                        defaultMessage: 'strapi version',
-                      })}
-                    </Typography>
-                    <Flex gap={3} direction="column" alignItems="start" as="dd">
-                      <Typography>v{strapiVersion}</Typography>
-                      {shouldUpdateStrapi && (
-                        <Link
-                          href={`https://github.com/strapi/strapi/releases/tag/${latestStrapiReleaseTag}`}
-                          isExternal
-                          endIcon={<ExternalLink />}
-                        >
-                          {formatMessage({
-                            id: 'Settings.application.link-upgrade',
-                            defaultMessage: 'Upgrade your admin panel',
-                          })}
-                        </Link>
-                      )}
-                    </Flex>
-                  </GridItem>
-                  <GridItem col={6} s={12}>
-                    <Typography variant="sigma" textColor="neutral600" as="dt">
-                      {formatMessage({
-                        id: 'Settings.application.edition-title',
-                        defaultMessage: 'current plan',
-                      })}
-                    </Typography>
-                    <Flex gap={3} direction="column" alignItems="start" as="dd">
-                      <Typography>
-                        {formatMessage(
-                          {
-                            id: 'Settings.application.ee-or-ce',
-                            defaultMessage:
-                              '{communityEdition, select, true {Community Edition} other {Enterprise Edition}}',
-                          },
-                          { communityEdition: appInfos.communityEdition }
-                        )}
-                      </Typography>
-                      <Link
-                        href="https://strapi.io/pricing-self-hosted"
-                        isExternal
-                        endIcon={<ExternalLink />}
-                      >
-                        {formatMessage({
-                          id: 'Settings.application.link-pricing',
-                          defaultMessage: 'See all pricing plans',
-                        })}
-                      </Link>
-                    </Flex>
-                  </GridItem>
-
-                  <GridItem col={6} s={12}>
-                    <Typography variant="sigma" textColor="neutral600" as="dt">
-                      {formatMessage({
-                        id: 'Settings.application.node-version',
-                        defaultMessage: 'node version',
-                      })}
-                    </Typography>
-                    <Typography as="dd">{appInfos.nodeVersion}</Typography>
-                  </GridItem>
-                  <AdminSeatInfo />
-                </Grid>
-              </Flex>
-              {canRead && data && (
-                <CustomizationInfos
-                  canUpdate={canUpdate}
-                  ref={inputsRef}
-                  projectSettingsStored={data}
-                />
-              )}
-            </Flex>
-          </ContentLayout>
-        </form>
-      </Main>
     </Layout>
   );
 };
